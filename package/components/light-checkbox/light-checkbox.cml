<template>
  <view class="light-checkbox" c-catch:tap="handleTap">
    <view class="lg-ck-container" style="{{ckContainerStyle}}">
      <text style="{{ckTextStyle}}">✓</text>
    </view>
    <!-- <image class="checkbox-img" src="{{checkBoxImg}}"></image> -->
  </view>
  
</template>

<script>
/*可以通过传递一个value的值，然后父组件改变这个值；
也可以传递一个c-model的值，父组件不用手动改这个值；
*/
class LightCheckbox {
  props = {
    disable:{
      type:Boolean,
      default:false,
    },
    value:{
      type:Boolean,
      default:false,
    },
    boxStyle:{ //设置box的样式
      type:String,
      default:"",
    },
    checkStyle:{ //设置对号的样式
      type:String,
      default:""
    }
    
  }

  data = {
    selectedImg:require("../../assets/images/checkbox-selected.png"),
    unavailableImg:require("../../assets/images/checkbox-unavailable.png"),
    unselectedImg:require("../../assets/images/checkbox-unselected.png"),
  }

  computed = {
   checkBoxImg(){
     if(this.disable){
       return this.unavailableImg;
     }else if(this.value){
       return this.selectedImg
     }else{
       return this.unselectedImg
     }
   },
   ckContainerStyle(){
     let ckContainer = '';
     if(this.disable){
       ckContainer = `border:1cpx solid #CACDD3;`;
     }else if(this.value){
       ckContainer = `background-color:#1D6EF0`;
     }else{
       ckContainer = `border:1cpx solid #999DA7`
     }
     return `${ckContainer};${this.boxStyle || ''}`
   },
   ckTextStyle(){
     return `color:#FFF;${this.checkStyle || ''}`
   }
    
  }

  watch  = {
  }

  methods = {
    handleTap(){
      if(this.disable){
        return ;
      }
      let newValue = !this.value;
      this.$cmlEmit('input',{value:newValue});
      this.$cmlEmit('change',{value:newValue})
    }
    
  }

  beforeCreate() {
  }

  created() {
  }

  beforeMount() {
  }

  mounted() {
  }

  beforeDestroy() {
  }

  destroyed() {
  }
}

export default new LightCheckbox();
</script>
<style lang="less">
@import '../../assets/css/var.less';
.light-checkbox{
  display:flex;
  justify-content: center;
  align-items: center;
}
.checkbox-img{
  width:36cpx;
  height:36cpx;
}
.lg-ck-container{
  width:36cpx;
  height:36cpx;
  border-radius:17cpx;
  display:flex;
  justify-content: center;
  align-items: center;

}
.lg-ck-check{
  width:12cpx;
  height:20cpx;
  border-color: #FFF;
  border-style: solid;
  border-width: 0 2cpx 2cpx 0;//weex不支持，所以只能用图片或者对号
  transform: rotate(45deg);
}
</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
    }
  }
}
</script>
