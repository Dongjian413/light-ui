<template>
  <light-popup position="center" mask="{{true}}" z-index="{{zIndex}}" show="{{show}}">
    <view class="light-alert" style="{{compStyle}}">
      <view class="alert-main">
        <view class="title">
          <text class="title-text">{{title}}</text>
        </view>
        <view class="content">
          <text class="content-text">{{content}}</text>
        </view>
      </view>
      <view class="operator" style="{{operatorStyle}}">
        <view 
          class="operator-item {{operatorItemClass}}" 
          c-for="{{transformedOper}}"
          c-for-item="item"
          c-for-index="index"
          c-bind:tap="handleItemClick(index, item.text)"
        >
          <text class="operator-text" style="{{item.textStyle || ''}}">{{item.text}}</text>
        </view>
      </view>
      <slot></slot>
      <!--bug: weex ios 不支持z-index， 但是越向后的元素层级越高，因此将close顺序放最后绝对定位-->
      <view class="close" c-if="{{showClose}}" c-bind:tap="handleClose">
        <image src="{{closeIcon}}" class="close-image"></image>
      </view>
    </view>
  </light-popup>
</template>

<script>

class LightAlert {
  props = {
    show: {
      type: Boolean,
      default: false,
    },
    operator: {
      type: Array,
      default: []
    },
    direction: {
      type: String,
      default: 'row' // row、column, 表示操作符的方向，默认为row
    },
    title: {
      type: String,
      required: true
    },
    content: {
      type: String,
      required: true
    },
    showClose: {
      type: Boolean,
      default: false
    },
    closeIcon: {
      type: String,
      default: require('./images/close.png')
    },
    zIndex: {
      type: Number,
      default: 9
    }
  }
  data = {
    compStyle: '',
    transformedOper: []
  }
  computed = {
    operatorStyle() {
      return `flex-direction: ${this.direction};`
    },
    operatorItemClass() {
      return `operator-item-${this.direction}`;
    }
  }

  watch = {
    show(val) {
      if (val) {
        this.transformOperator();
      }
    }
  }

  methods = {
    // 根据设计规范， 控制：
    // direction为row时， operator.length <= 2; 
    // direction为column时, operator.length <= 3;
    transformOperator() {
      let lengthCtrl = {
        row: 2,
        column: 3
      }
      this.transformedOper = this.operator.length <= lengthCtrl[this.direction]
        ? this.operator
        : this.operator.slice(0, lengthCtrl[this.direction]);
    },
    handleItemClick(index, text) {
      this.$cmlEmit('operate', {
        index,
        text
      })
    },
    handleClose() {
      this.$cmlEmit('close')
    }
  }
  mounted() {
    this.transformOperator();
  }

}

export default new LightAlert();
</script>
<style lang="less" scoped>
@import "../../assets/css/var.less";
.light-alert {
  background: #FFFFFF;
  position: relative;
  width: 560cpx;
  flex-direction: column;
}
.close {
  position: absolute;
  right: 30cpx;
  top: 30cpx;
}
.close-image {
  width: 20cpx;
  height: 20cpx;
}
.alert-main {
  padding: 40cpx 48cpx;
}
.title {
  margin-bottom: 16cpx;
  align-items: center;
}
@media cml-type(web, wx, alipay, baidu) {
  .title-text {
    font-size: 40cpx;
    font-weight: bold;
    color: @major-color;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .content {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  .content-text {
    font-size: 28cpx;
    color: @minor-color;
    text-align: center;
  }
}
@media cml-type(weex) {
  .title-text {
    font-size: 40cpx;
    font-weight: bold;
    color: @major-color;
    overflow: hidden;
    lines:1;
  }
  .content-text {
    font-size: 28cpx;
    color: @minor-color;
    text-align: center;
    overflow: hidden;
    lines:2;
  }
}

.operator {
  border-top: 1px solid @line-color;
}
.operator-item {
  justify-content: center;
  align-items: center;
  height: 100cpx;
}
.operator-item:active {
  background: @bg-dark-color;
}
.operator-item-row {
  flex: 1;
  border-left: 1px solid @line-color;
}
.operator-item-row:first-child {
  border-left: none;
}
.operator-item-column {
  border-top: 1px solid @line-color;
}
.operator-item-column:first-child {
  border-top: none;
}
.operator-text {
  color: @minor-color;
  font-size: 32cpx;
}

</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
      "light-popup": "/components/light-popup/light-popup"
    }
  }
}
</script>
