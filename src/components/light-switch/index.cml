<template>
  <view 
    class="light-switch" 
    style="{{switchStyle}}"
    c-bind:tap="handleChange"
  > 
    <view class="checked-text" style="{{checkedTextStyle}}" c-if="{{checked}}">
      <text class="text">{{checkedText}}</text>
    </view>
    <view class="unchecked-text" style="{{checkedTextStyle}}" c-else>
      <text class="text">{{uncheckedText}}</text>
    </view>
    <view class="circle" style="{{circleStyle}}"></view>
  </view>
</template>

<script>

class LightSwitch {

  props = {
    disabled: {
      type: Boolean,
      default: false
    },
    checked: {
      type: Boolean,
      default: false
    },
    theme: {
      type: String, // 颜色， 默认为顺风车品牌色
      default: '#1D6EF0' 
    },
    width: {
      type: [String, Number],
      default: 80
    },
    checkedText: {
      type: String,
      default: ''
    },
    uncheckedText: {
      type: String,
      default: ''
    }
  }


  computed = {
    
    switchStyle() {
      let switchStyle = `width: ${this.width}cpx; `;
      switchStyle += this.checked ? `background: ${this.theme}; ` : 'background: #ECEDF0; '
      switchStyle += this.disabled ? 'opacity: .5;' : ''
      return switchStyle;
    },
    circleStyle() {
      const padding = 4;
      const slideWidth = this.getOutCircleWidth();
      return `left: ${this.checked ? slideWidth : padding}cpx`
    },
    checkedTextStyle() {
      const width = this.getOutCircleWidth();
      return `width: ${width}cpx`
    }
  }


  methods = {

    getOutCircleWidth() {
      const circleWidth = 40;
      const switchWidth = parseInt(this.width, 10);
      const padding = 4;
      return switchWidth - circleWidth - padding
    },

    handleChange() {
      if (this.disabled) {
        return;
      }
      this.$cmlEmit('change', {
        value: !this.checked
      })
    }
  }
}

export default new LightSwitch();
</script>
<style scope lang="less">
@import "../../assets/css/var.less";
.light-switch {
  height: 48cpx;
  border-radius: 48cpx;
  justify-content: center;
}
.checked-text {
  justify-content: center;
  align-items: center;
  align-self: flex-start;
}
.unchecked-text {
  justify-content: center;
  align-items: center;
  align-self: flex-end;
}
.text {
  color: @first-light-color;
  font-size: 28cpx;
}
.circle {
  width: 40cpx;
  height: 40cpx;
  border-radius: 40cpx;
  background: @bg-light-color;
  position: absolute;
  transition: left 200ms;
  -webkit-transition: left 200ms;
}

</style>
<script cml-type="json">
{
  "base": {
    "usingComponents": {
    }
  }
}
</script>
